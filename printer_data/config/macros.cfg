[gcode_macro CG28]
# Misc
# #This macro will instruct the printer to check if homing is required before issuing G28.
gcode:
  STATUS_HOMING
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
  STATUS_READY

[gcode_macro PRINT_START]
 #  This macro to be placed in slicer settings. This will give actions for the printer to take before a print begins.
gcode:
   {% set bedtemp = params.BED|int %}
   {% set hotendtemp = params.HOTEND|int %}
  
    CG28                                                   ; conditional homing
    BED_MESH_CALIBRATE
    #BED_MESH_PROFILE LOAD=default
    STATUS_HEATING
    M190 S{bedtemp}                                        ; Wait for bed to heat
    G92 E0                                                 ; Zero the extruder
    G90                                                    ; Absolute positioning
    SMART_PARK
    M109 S{hotendtemp}                                     ; Wait for extruder to heat
    G92 E0                                                 ; Zero the extruder
    STATUS_PRINTING
    LINE_PURGE


[gcode_macro PRINT_END]
#   This macro to be placed in slicer settings. This will give actions for the printer to take when a print is completed.
gcode:
    M400                                                   ; wait for buffer to clear
    G92 E0                                                 ; zero the extruder
    G1 E-4.0 F3600                                         ; retract filament
    G90                                                    ; relative positioning

    G0 Z200 F3600                                     ; move nozzle up
    TURN_OFF_HEATERS                                       ; Turn off heaters
    M107                                                   ; turn off fan
    G90                                                    ; Absolute positioning

    G1 X5 Y200 F5000                                      ; 
    STATUS_PART_READY
                                                    ; Pause


[gcode_macro CENTER]

gcode:
    G90
    G1 X112 Y112  F5000




[gcode_macro PURGEBLOB]
# Legacy
#     This macro is used at the beginning of the print to eliminate nozzle stringing associated with the nozzle coming up to temp before a print. It has NOT been modified for use with the 0.2 to wit, the change in z homeing.
#     This macro requires your slicer to be setup to pass variables to klipper. Otherwise the results will be unpredictable.
gcode:

    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
   
    G28                                                   ; conditional homing
    BED_MESH_PROFILE LOAD=default
    STATUS_HEATING
    M190 S{bedtemp}                                        ; Wait for bed to heat
    G92 E0                                                 ; Zero the extruder
    G90                                                    ; Absolute positioning
    G1 X5 Y10 Z1 F1800                                     ; Go to start pos for perge line
    G1 Z0.4 F600                                           ; Lower to purge height
    G91                                                    ; Relative positioning
    M109 S{hotendtemp}                                     ; Wait for extruder to heat
    G1 X5 E40 F40                                          ; Extrude blob of filament on the bed
    M106 P0                                                ; Enable Cooling Fan
    G1 X20 Z5 F100                                         ; Slow drag away from the blob with fans helping cool and break strings. Also raize z so the blob clears the fan duct
    G1 X5 Z-5.1 F9000                                      ; Now that the blob has cleared the duct we go back down for a short 0.3mm height extrusion
    G1 X5 E2 F180                                          ; Slow 5mm extrude move to help with stringing
    G1 X30 E-1 F6000                                       ; Fast move and retract to break strings and reduce ooze
    G1 Z1 F100                                             ; Lift
    M104 P0 S0                                             ; Disable Cooling Fan
    G92 E0                                                 ; Zero the extruder
    G90



[gcode_macro Preheat_PLA]
# Preheating
#   This macro is for preparing the printer to print PLA, with the nozzle heated, but below the temperature at which PLA will begin to ooze.
gcode:
    STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=190
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=70


[gcode_macro Preheat_PETG]
#   This macro is for preparing the printer to print PETG, with the nozzle heated, but below the temperature at which PETG will begin to ooze.
gcode:
    STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=80


[gcode_macro Preheat_ABS]
#   This macro is for preparing the printer to print ABS, with the nozzle heated, but below the temperature at which ABS will begin to ooze.
gcode:
    STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=100






[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED